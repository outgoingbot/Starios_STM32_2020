/////////////////////////////////////////////////////////////////////////////////////////////////////////
//custom made 3x5 font.
//should comment out all uneeded values and adjust the entrypoint of 31? in the main loop
const char CH[]  = { ////////////////////////////////////Standard Table *do not append. mod of cha
//width, height, 5 columns (bottom-to-top)
0x00, 0x00, 0x00, // space
0x0, 0x17, 0x0, //Char: !
0x3, 0x0, 0x3, //Char: "
0x1F, 0xA, 0x1F, //Char: #
0x16, 0x1F, 0xD, //Char: $
0x9, 0x4, 0x12, //Char: %
0xA, 0x15, 0x1A, //Char: &
0x3, 0x0, 0x0, //Char: '
0xE, 0x11, 0x0, //Char: (
0x0, 0x11, 0xE, //Char: )
0x3, 0x3, 0x0, //Char: *
0x4, 0xE, 0x4, //Char: +
0x10, 0x8, 0x0, //Char: ,
0x4, 0x4, 0x4, //Char: -
0x0, 0x0, 0x10, //Char: .
0x10, 0x8, 0x4, //Char: /
0x1F, 0x11, 0x1F, //Char: 0
0x2, 0x1F, 0x0, //Char: 1
0x19, 0x15, 0x13, //Char: 2
0x15, 0x15, 0x1B, //Char: 3
0x7, 0x4, 0x1F, //Char: 4
0x17, 0x15, 0x1D, //Char: 5
0x1F, 0x14, 0x1C, //Char: 6
0x1, 0x1, 0x1F, //Char: 7
0x1F, 0x15, 0x1F, //Char: 8
0x7, 0x5, 0x1F, //Char: 9
0x0, 0xA, 0x0, //Char: :
0x10, 0xA, 0x0, //Char: ;
0x4, 0xA, 0x11, //Char: <
0xA, 0xA, 0xA, //Char: =
0x11, 0xA, 0x4, //Char: >
0x2, 0x19, 0x6, //Char: ?
0x1D, 0x15, 0x1D, //Char: @
0x1E, 0x5, 0x1E, // A
0x1F, 0x15, 0xA, // B
0x1F, 0x11, 0x11, //Char:C
0x1F, 0x11, 0xE, //Char: D
0x1F, 0x15, 0x15, //Char: E
0x1F, 0x5, 0x5, //Char: F
0x1F, 0x11, 0x19, //Char: G
0x1F, 0x4, 0x1F, //Char: H
0x11, 0x1F, 0x11, //Char: I
0x8, 0x10, 0xF, //Char: J
0x1F, 0x4, 0x1B, //Char: K
0x1F, 0x10, 0x10, //Char: L
0x1F, 0x4, 0x1F, //Char: M
0x1F, 0x4, 0x1F, //Char: N
0x1F, 0x11, 0x1F, //Char: O
0x1F, 0x5, 0x7, //Char: P
0x1F, 0x11, 0xF, //Char: Q
0x1F, 0x5, 0x1B, //Char: R
0x17, 0x15, 0x1D, //Char: S
0x1, 0x1F, 0x1, //Char: T
0x1F, 0x10, 0x1F, //Char: U
0xF, 0x10, 0xF, //Char: V
0xF, 0x10, 0xF, //Char: W
0x1B, 0x4, 0x1B, //Char: X
0x3, 0x1C, 0x3, //Char: Y
0x19, 0x15, 0x13  //Char: Z
/*
0x0, 0x1F, 0x11, //Char: [ //dont really need any after 'Z' Plus Im not sure any of them are mapped to a font layout
0x3, 0x4, 0x18, //Char: '\'
0x11, 0x1F, 0x0, //Char: ]
0x2, 0x1, 0x2, //Char: hat
0x10, 0x10, 0x10, //Char: _
0x1, 0x2, 0x0, //Char: `
0xC, 0x12, 0x1C, //Char: a
0x1F, 0x12, 0xC, //Char: b
0xC, 0x12, 0x12, //Char: c
0xC, 0x12, 0x1F, //Char: d
0xC, 0x1A, 0x14, //Char: e
0x4, 0x1F, 0x5, //Char: f
0x14, 0x1A, 0xC, //Char: g
0x1F, 0x4, 0x18, //Char: h
0x0, 0x1D, 0x0, //Char: i
0x10, 0xD, 0x0, //Char: j
0x1F, 0x8, 0x14, //Char: k
0x0, 0x1F, 0x0, //Char: l
0x1F, 0x3, 0x1F, //Char: m
0x1C, 0x2, 0x1C, //Char: n
0xC, 0x12, 0xC, //Char: o
0x1E, 0xA, 0x4, //Char: p
0x4, 0xA, 0x1E, //Char: q
0x0, 0x1E, 0x4, //Char: r
0x14, 0xA, 0x0, //Char: s
0x2, 0x1F, 0x2, //Char: t
0xE, 0x10, 0xE, //Char: u
0x6, 0x18, 0x6, //Char: v
0xE, 0x18, 0xE, //Char: w
0x12, 0xC, 0x12, //Char: x
0x16, 0x18, 0xE, //Char: y
0x1A, 0x1E, 0x16, //Char: z
0x4, 0xE, 0x11, //Char: {
0x0, 0x1F, 0x0, //Char: |
0x11, 0xE, 0x4, //Char: }
0x2, 0x6, 0x4, //Char: ~
*/
};//////////////////////////////////////////////////////////////////////////////////////////////////////|

